{"componentChunkName":"component---src-templates-category-tsx","path":"/posts/devops/","result":{"pageContext":{"currentCategory":"devops","categories":["All","algorithm","daily","review","devops","vision"],"edges":[{"node":{"frontmatter":{"title":"CICD 강의 메모","date":"2022-12-20T00:00:00.000Z","moment":"2 years ago","thumbnail":null,"tags":["devops"],"category":"devops"},"excerpt":"git-flowdocker Namespace\npidnetworkIPCMountUNIX Time-sharing\nCGroup\ncpumemoryblock I/O…","id":"6b4a34cc-0a4f-5ff3-a68d-834fce860695","body":"\n# CI/CD\n\n- git-flow\n- docker\n    - Namespace\n        - pid\n        - network\n        - IPC\n        - Mount\n        - UNIX Time-sharing\n    - CGroup\n        - cpu\n        - memory\n        - block I/O\n        - network\n    - union file system\n    - `-it`\n        For interactive processes (like a shell), you must use `-i -t` together in order to allocate a tty for the container process. `-i -t` is often written `-it` as you’ll see in later examples. Specifying `-t` is forbidden when the client is receiving its standard input from a pipe, as in:\n        ```bash\n        echo test | docker run -i busybox cat\n        ```\n- docker file 작성\n    - CMD & ENTRYPOINT\n- linux\n    - `tail -f` : tail follow\n    - `history` → `!{number}`\n    - layered file system\n        - `from ubuntu18`\n    - history 남기지 않기\n        - `공백` command\n- python\n    - `fire`\n        - support CLI\n- Jenkins\n    - kubernetes\n        - argo cd\n    - RBAC\n        - roll based access control\n","fields":{"timeToRead":{"minutes":0.735},"slug":"/posts/2022-12-20/cicd-lecture-memo/"},"internal":{"contentFilePath":"/home/runner/work/ha4219.github.io/ha4219.github.io/contents/posts/2022-12-20/cicd-lecture-memo.mdx"}},"next":{"fields":{"slug":"/posts/2022-10-01/positional-embedding/"}},"previous":{"fields":{"slug":"/posts/2023-01-04/22-reivew/"}}}]}},"staticQueryHashes":[],"slicesMap":{}}